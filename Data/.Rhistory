at[[1]][5,3]*geno.num*rep.num
lmax <- max(c(lambda, qf(1-(1-conf)/2, env.num-2, env.num*(geno.num-1)*(rep.num-1))))*1.1
# plot lambda limits
conf <- 0.95
lmax <- max(c(lambda, qf(1-(1-conf)/2, env.num-2, env.num*(geno.num-1)*(rep.num-1))))*1.1
lmax
lx <- seq(0,lmax,lmax/100)
ta <- qt(1-(1-conf)/2, env.num-2)
pi.alpha <- ta * ((lx * (geno.num-1) * at[[1]][5,3] * at[[1]][2,3]) /
(at[[1]][2,3] - at[[1]][3,3]) /
((env.num-2) * at[[1]][2,3] - (ta^2 + env.num - 2)
* at[[1]][3,3]))^.5
lx
ta
pi.alpha
amax <- max(c(abs(alpha), pi.alpha))
plot(1, type = "n", xlim = c(-0.05*lmax, lmax), ylim = c(-amax, amax),
main = paste("Tai stability analysis for ", trait, sep = ""), xlab = expression(lambda), ylab = expression(alpha))
points(lambda, alpha, col = "black", lwd = 2, pch = 16)
text(lambda, alpha, labels = names(alpha), col = "blue", pos = 1, offset = .3)
points(lx, pi.alpha, type = "l", lty = 1, col = "black")
points(lx, -pi.alpha, type = "l", lty = 1, col = "black")
abline(v = qf((1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
abline(v = qf(1-(1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
geno.mean
rs <- as.data.frame(coords)
coords <- cbind(alpha, lambda)
rs <- as.data.frame(coords)
rs
res_frame<-cbind(rs,geno.mean)
res_frame
names(res_frame) <- ("Alpha","lamba","Genotype")
names(res_frame) <- ("Alpha", "lamba", "Genotype")
res_frame<-cbind(rs,geno.mean)
res_frame
names(res_frame) <- c("Alpha", "lamba", "Genotype")
res_frame
names(res_frame) <- c("Alpha", "lamba", "Genotype Mean")
res_frame
result <- list(res_frame)
return(result)
Tai <- function( geno, env, rep,y,trait) {
# Everything as factor
geno <- as.factor(geno)
env <- as.factor(env)
rep <- as.factor(rep)
y <- as.numeric(y)
# Check data
geno.num <- nlevels(geno)
env.num <- nlevels(env)
rep.num <- nlevels(rep)
# Compute interaction effects matrix
int.mean <- tapply(y, list(geno,env), mean, na.rm = T)
overall.mean <- mean(int.mean)
env.mean <- apply(int.mean, 2, mean)
geno.mean <- apply(int.mean, 1, mean)
int.eff <- int.mean + overall.mean
for (i in 1:env.num) int.eff[,i] <- int.eff[,i] - geno.mean
for (i in 1:geno.num) int.eff[i,] <- int.eff[i,] - env.mean
# ANOVA
model <- aov(y ~ geno + env +rep %in% env + geno:env)
at <- summary(model)
# Compute Tai values alpha and lambda
slgl <- int.eff
for (i in 1:geno.num) slgl[i,] <- slgl[i,]*(env.mean - overall.mean)/(env.num-1)
alpha <- apply(slgl, 1, sum)/(at[[1]][2,3]-at[[1]][3,3])*geno.num*rep.num
s2gl <- int.eff
for (i in 1:geno.num) s2gl[i,] <- s2gl[i,]^2/(env.num-1)
lambda <- (apply(s2gl, 1, sum) - alpha*apply(slgl, 1, sum))/(geno.num-1)/
at[[1]][5,3]*geno.num*rep.num
# plot lambda limits
conf <- 0.95
lmax <- max(c(lambda, qf(1-(1-conf)/2, env.num-2, env.num*(geno.num-1)*(rep.num-1))))*1.1
# Prediction interval for alpha
lx <- seq(0,lmax,lmax/100)
ta <- qt(1-(1-conf)/2, env.num-2)
pi.alpha <- ta * ((lx * (geno.num-1) * at[[1]][5,3] * at[[1]][2,3]) /
(at[[1]][2,3] - at[[1]][3,3]) /
((env.num-2) * at[[1]][2,3] - (ta^2 + env.num - 2)
* at[[1]][3,3]))^.5
# plot alpha limits
amax <- max(c(abs(alpha), pi.alpha))
# Tai plot
plot(1, type = "n", xlim = c(-0.05*lmax, lmax), ylim = c(-amax, amax),
main = paste("Tai stability analysis for ", trait, sep = ""), xlab = expression(lambda), ylab = expression(alpha))
points(lambda, alpha, col = "black", lwd = 2, pch = 16)
text(lambda, alpha, labels = names(alpha), col = "blue", pos = 1, offset = .3)
points(lx, pi.alpha, type = "l", lty = 1, col = "black")
points(lx, -pi.alpha, type = "l", lty = 1, col = "black")
abline(v = qf((1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
abline(v = qf(1-(1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
# Output
coords <- cbind(alpha, lambda)
rs <- as.data.frame(coords)
res_frame<-cbind(rs,geno.mean)
names(res_frame) <- c("Alpha", "lamba", "Genotype Mean")
result <- list(Anova=Model,Stability=res_frame)
return(result)
}
tai(dat$geno,dat$env,dat$rep,dat$y,"Y")
Tai(dat$geno,dat$env,dat$rep,dat$y,"Y")
dat <- read.csv("dat.csv",head=T)
head(dat)
Tai <- function( geno, env, rep,y,trait) {
# Everything as factor
geno <- as.factor(geno)
env <- as.factor(env)
rep <- as.factor(rep)
y <- as.numeric(y)
# Check data
geno.num <- nlevels(geno)
env.num <- nlevels(env)
rep.num <- nlevels(rep)
# Compute interaction effects matrix
int.mean <- tapply(y, list(geno,env), mean, na.rm = T)
overall.mean <- mean(int.mean)
env.mean <- apply(int.mean, 2, mean)
geno.mean <- apply(int.mean, 1, mean)
int.eff <- int.mean + overall.mean
for (i in 1:env.num) int.eff[,i] <- int.eff[,i] - geno.mean
for (i in 1:geno.num) int.eff[i,] <- int.eff[i,] - env.mean
# ANOVA
model <- aov(y ~ geno + env +rep %in% env + geno:env)
at <- summary(model)
# Compute Tai values alpha and lambda
slgl <- int.eff
for (i in 1:geno.num) slgl[i,] <- slgl[i,]*(env.mean - overall.mean)/(env.num-1)
alpha <- apply(slgl, 1, sum)/(at[[1]][2,3]-at[[1]][3,3])*geno.num*rep.num
s2gl <- int.eff
for (i in 1:geno.num) s2gl[i,] <- s2gl[i,]^2/(env.num-1)
lambda <- (apply(s2gl, 1, sum) - alpha*apply(slgl, 1, sum))/(geno.num-1)/
at[[1]][5,3]*geno.num*rep.num
# plot lambda limits
conf <- 0.95
lmax <- max(c(lambda, qf(1-(1-conf)/2, env.num-2, env.num*(geno.num-1)*(rep.num-1))))*1.1
# Prediction interval for alpha
lx <- seq(0,lmax,lmax/100)
ta <- qt(1-(1-conf)/2, env.num-2)
pi.alpha <- ta * ((lx * (geno.num-1) * at[[1]][5,3] * at[[1]][2,3]) /
(at[[1]][2,3] - at[[1]][3,3]) /
((env.num-2) * at[[1]][2,3] - (ta^2 + env.num - 2)
* at[[1]][3,3]))^.5
# plot alpha limits
amax <- max(c(abs(alpha), pi.alpha))
# Tai plot
plot(1, type = "n", xlim = c(-0.05*lmax, lmax), ylim = c(-amax, amax),
main = paste("Tai stability analysis for ", trait, sep = ""), xlab = expression(lambda), ylab = expression(alpha))
points(lambda, alpha, col = "black", lwd = 2, pch = 16)
text(lambda, alpha, labels = names(alpha), col = "blue", pos = 1, offset = .3)
points(lx, pi.alpha, type = "l", lty = 1, col = "black")
points(lx, -pi.alpha, type = "l", lty = 1, col = "black")
abline(v = qf((1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
abline(v = qf(1-(1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
# Output
coords <- cbind(alpha, lambda)
rs <- as.data.frame(coords)
res_frame<-cbind(rs,geno.mean)
names(res_frame) <- c("Alpha", "lamba", "Genotype Mean")
result <- list(Anova=model,Stability=res_frame)
return(result)
}
Tai(dat$geno,dat$env,dat$rep,dat$y,"Y")
Tai <- function( geno, env, rep,y,trait) {
# Everything as factor
geno <- as.factor(geno)
env <- as.factor(env)
rep <- as.factor(rep)
y <- as.numeric(y)
# Check data
geno.num <- nlevels(geno)
env.num <- nlevels(env)
rep.num <- nlevels(rep)
# Compute interaction effects matrix
int.mean <- tapply(y, list(geno,env), mean, na.rm = T)
overall.mean <- mean(int.mean)
env.mean <- apply(int.mean, 2, mean)
geno.mean <- apply(int.mean, 1, mean)
int.eff <- int.mean + overall.mean
for (i in 1:env.num) int.eff[,i] <- int.eff[,i] - geno.mean
for (i in 1:geno.num) int.eff[i,] <- int.eff[i,] - env.mean
# ANOVA
model <- aov(y ~ geno + env +rep %in% env + geno:env)
at <- summary(model)
# Compute Tai values alpha and lambda
slgl <- int.eff
for (i in 1:geno.num) slgl[i,] <- slgl[i,]*(env.mean - overall.mean)/(env.num-1)
alpha <- apply(slgl, 1, sum)/(at[[1]][2,3]-at[[1]][3,3])*geno.num*rep.num
s2gl <- int.eff
for (i in 1:geno.num) s2gl[i,] <- s2gl[i,]^2/(env.num-1)
lambda <- (apply(s2gl, 1, sum) - alpha*apply(slgl, 1, sum))/(geno.num-1)/
at[[1]][5,3]*geno.num*rep.num
# plot lambda limits
conf <- 0.95
lmax <- max(c(lambda, qf(1-(1-conf)/2, env.num-2, env.num*(geno.num-1)*(rep.num-1))))*1.1
# Prediction interval for alpha
lx <- seq(0,lmax,lmax/100)
ta <- qt(1-(1-conf)/2, env.num-2)
pi.alpha <- ta * ((lx * (geno.num-1) * at[[1]][5,3] * at[[1]][2,3]) /
(at[[1]][2,3] - at[[1]][3,3]) /
((env.num-2) * at[[1]][2,3] - (ta^2 + env.num - 2)
* at[[1]][3,3]))^.5
# plot alpha limits
amax <- max(c(abs(alpha), pi.alpha))
# Tai plot
plot(1, type = "n", xlim = c(-0.05*lmax, lmax), ylim = c(-amax, amax),
main = paste("Tai stability analysis for ", trait, sep = ""), xlab = expression(lambda), ylab = expression(alpha))
points(lambda, alpha, col = "black", lwd = 2, pch = 16)
text(lambda, alpha, labels = names(alpha), col = "blue", pos = 1, offset = .3)
points(lx, pi.alpha, type = "l", lty = 1, col = "black")
points(lx, -pi.alpha, type = "l", lty = 1, col = "black")
abline(v = qf((1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
abline(v = qf(1-(1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
# Output
coords <- cbind(alpha, lambda)
rs <- as.data.frame(coords)
res_frame<-cbind(rs,geno.mean)
names(res_frame) <- c("Alpha", "lamba", "Genotype Mean")
result <- list(Anova=at,Stability=res_frame)
return(result)
}
Tai(dat$geno,dat$env,dat$rep,dat$y,"Y")
Tai(dat$entry,dat$env,dat$rep,dat$y,"Y")
dat <- read.csv("E-R.csv",head=T)
Tai <- function( geno, env, rep,y,trait) {
# Everything as factor
geno <- as.factor(geno)
env <- as.factor(env)
rep <- as.factor(rep)
y <- as.numeric(y)
# Check data
geno.num <- nlevels(geno)
env.num <- nlevels(env)
rep.num <- nlevels(rep)
# Compute interaction effects matrix
int.mean <- tapply(y, list(geno,env), mean, na.rm = T)
overall.mean <- mean(int.mean)
env.mean <- apply(int.mean, 2, mean)
geno.mean <- apply(int.mean, 1, mean)
int.eff <- int.mean + overall.mean
for (i in 1:env.num) int.eff[,i] <- int.eff[,i] - geno.mean
for (i in 1:geno.num) int.eff[i,] <- int.eff[i,] - env.mean
# ANOVA
model <- aov(y ~ geno + env +rep %in% env + geno:env)
at <- summary(model)
# Compute Tai values alpha and lambda
slgl <- int.eff
for (i in 1:geno.num) slgl[i,] <- slgl[i,]*(env.mean - overall.mean)/(env.num-1)
alpha <- apply(slgl, 1, sum)/(at[[1]][2,3]-at[[1]][3,3])*geno.num*rep.num
s2gl <- int.eff
for (i in 1:geno.num) s2gl[i,] <- s2gl[i,]^2/(env.num-1)
lambda <- (apply(s2gl, 1, sum) - alpha*apply(slgl, 1, sum))/(geno.num-1)/
at[[1]][5,3]*geno.num*rep.num
# plot lambda limits
conf <- 0.95
lmax <- max(c(lambda, qf(1-(1-conf)/2, env.num-2, env.num*(geno.num-1)*(rep.num-1))))*1.1
# Prediction interval for alpha
lx <- seq(0,lmax,lmax/100)
ta <- qt(1-(1-conf)/2, env.num-2)
pi.alpha <- ta * ((lx * (geno.num-1) * at[[1]][5,3] * at[[1]][2,3]) /
(at[[1]][2,3] - at[[1]][3,3]) /
((env.num-2) * at[[1]][2,3] - (ta^2 + env.num - 2)
* at[[1]][3,3]))^.5
# plot alpha limits
amax <- max(c(abs(alpha), pi.alpha))
# Tai plot
plot(1, type = "n", xlim = c(-0.05*lmax, lmax), ylim = c(-amax, amax),
main = paste("Tai stability analysis for ", trait, sep = ""), xlab = expression(lambda), ylab = expression(alpha))
points(lambda, alpha, col = "black", lwd = 2, pch = 16)
text(lambda, alpha, labels = names(alpha), col = "blue", pos = 1, offset = .3)
points(lx, pi.alpha, type = "l", lty = 1, col = "black")
points(lx, -pi.alpha, type = "l", lty = 1, col = "black")
abline(v = qf((1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
abline(v = qf(1-(1-conf)/2, env.num-2, env.num*(geno.num)*(rep.num-1)),
lty = 1, col = "red")
# Output
coords <- cbind(alpha, lambda)
rs <- as.data.frame(coords)
res_frame<-cbind(rs,geno.mean)
names(res_frame) <- c("Alpha", "lamba", "Genotype Mean")
result <- list(Anova=at,Stability=res_frame)
return(result)
}
head(dat)
Tai(dat$Entry,dat$Env,dat$Rep,dat$y,"Grain kl ha")
#Example 1
dat <- read.csv("E-R.csv",head=T)
head(dat)
Tai(dat$Entry,dat$Env,dat$Rep,dat$y,"y")
#Example 1
dat <- read.csv("F-W.csv",head=T)
head(dat)
Tai(dat$Entry,dat$Env,dat$Rep,dat$y,"y")
fw<- function(Entry,Env,Rep,y,trait){
Entry <-as.factor (Entry)
Loc <- as.factor(Env)
rep <- as.factor(Rep)
y <- as.numeric(y)
geno.num <- nlevels(Entry)
env.num <- nlevels(Loc)
rep.num <- nlevels(rep)
Entry_names<- levels(Entry)
#####################anova
m1 <- aov(y~Entry+Loc+rep:Loc+Entry:Loc)
an1 <- anova(m1)
################# Regression anovo
int.mean <- tapply(y,list(Entry,Loc), mean)
overall.mean <- mean(int.mean, na.rm=T)
env.mean <- apply(int.mean, 2, mean, na.rm=T)
geno.mean <- apply(int.mean, 1, mean, na.rm=T)
rgss<- apply(int.mean, 2, function(x){
x/mean(x)
})
RGss<- (apply(rgss, 1, sum)^2)
RGss <- (rep.num)^2*(sum(RGss))
Rgms <- RGss/(geno.num-1)
Drss <- an1$`Sum Sq`[4]-RGss
Drms <- Drss/((geno.num-1)*(env.num-1)-(rep.num-1))
SS <- c(RGss,Drss )
MS <- c(Rgms,Drms)
f <- MS/SS
d_f <- c((geno.num-1),((geno.num-1)*(env.num-1)-(rep.num-1)))
pr <-  c(pf(f[1],d_f[1], an1$Df[5]),pf(f[2],d_f[2], an1$Df[5]))
DF <- data.frame(`Df`=d_f,`Sum sq`=SS,`Ms sq`=MS,F=f,`Pr(>F)`= pr,check.names=FALSE)
rownames(DF) <- c("Regression","Dev.Regr")
class(DF) <- c("anova","data.frame")
### Regression-stability for environments
b <- NULL
se <- NULL
for (i in 1:geno.num){
modelo <- lm(int.mean[i,] ~ env.mean)
b[i] <- coef(modelo)[2]
se[i] <- summary.lm(modelo)$coefficients[2,2]
}
stability <- cbind(geno.mean ,b, se)
stability <- as.data.frame(stability )
names(stability) <- c("Genotype","bi","SE")
plot(1, type = 'n', xlim = range(c(stability[,1])) ,ylim = range(stability[,2]), xlab = trait,
ylab ="bi",main=paste("Finlay and Wilkinson's Model for ", trait, sep = ""))
text(stability[,1], stability[,2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue",pos = 3)
points(stability[,1], stability[,2], col = "black", lwd = 2, pch =16)
abline(h = 1, v=overall.mean ,lty = 1)
result <- list(ANOVA=an1,FIW=DF,stability=stability)
return(result)
}
dat <- read.csv("F-W.csv",header = T)
dat <- dplyr::select(dat,Entry,Loc,Rep,y)
names(dat) <- c("Entry","Env","Rep","y")
f<- fw(dat$Entry,dat$Env,dat$Rep,dat$y,"Yield")
f
head(dat)
dat <- read.csv("F-W.csv",header = T)
head(dat)
fw<- function(Entry,Env,Rep,y,trait){
Entry <-as.factor (Entry)
Loc <- as.factor(Env)
rep <- as.factor(Rep)
y <- as.numeric(y)
geno.num <- nlevels(Entry)
env.num <- nlevels(Loc)
rep.num <- nlevels(rep)
Entry_names<- levels(Entry)
#####################anova
m1 <- aov(y~Entry+Loc+rep:Loc+Entry:Loc)
an1 <- anova(m1)
################# Regression anovo
int.mean <- tapply(y,list(Entry,Loc), mean)
overall.mean <- mean(int.mean, na.rm=T)
env.mean <- apply(int.mean, 2, mean, na.rm=T)
geno.mean <- apply(int.mean, 1, mean, na.rm=T)
rgss<- apply(int.mean, 2, function(x){
x/mean(x)
})
RGss<- (apply(rgss, 1, sum)^2)
RGss <- (rep.num)^2*(sum(RGss))
Rgms <- RGss/(geno.num-1)
Drss <- an1$`Sum Sq`[4]-RGss
Drms <- Drss/((geno.num-1)*(env.num-1)-(rep.num-1))
SS <- c(RGss,Drss )
MS <- c(Rgms,Drms)
f <- MS/SS
d_f <- c((geno.num-1),((geno.num-1)*(env.num-1)-(rep.num-1)))
pr <-  c(pf(f[1],d_f[1], an1$Df[5]),pf(f[2],d_f[2], an1$Df[5]))
DF <- data.frame(`Df`=d_f,`Sum sq`=SS,`Ms sq`=MS,F=f,`Pr(>F)`= pr,check.names=FALSE)
rownames(DF) <- c("Regression","Dev.Regr")
class(DF) <- c("anova","data.frame")
### Regression-stability for environments
b <- NULL
se <- NULL
for (i in 1:geno.num){
modelo <- lm(int.mean[i,] ~ env.mean)
b[i] <- coef(modelo)[2]
se[i] <- summary.lm(modelo)$coefficients[2,2]
}
stability <- cbind(geno.mean ,b, se)
stability <- as.data.frame(stability )
names(stability) <- c("Genotype","bi","SE")
plot(1, type = 'n', xlim = range(c(stability[,1])) ,ylim = range(stability[,2]), xlab = trait,
ylab ="bi",main=paste("Finlay and Wilkinson's Model for ", trait, sep = ""))
text(stability[,1], stability[,2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue",pos = 3)
points(stability[,1], stability[,2], col = "black", lwd = 2, pch =16)
abline(h = 1, v=overall.mean ,lty = 1)
result <- list(ANOVA=an1,FIW=DF,stability=stability)
return(result)
}
f<- fw(dat$Entry,dat$Env,dat$Rep,dat$y,"Yield")
f
###Example 1
dat <- read.csv("E-R.csv",head=T)
E_R <- function(Env,Rep,Entry,y,trait){
################# Begin
Rep <- as.factor(Rep)
Entry <- as.factor(Entry)
Loc <- as.factor(Env)
y <- as.numeric(y)
###########################
Entry_names<- levels(Entry)
r <- length(levels(Rep))
s <- length(levels(Loc))
t <- length(levels(Entry))
##########################@@@@@
m1<- aov(y ~ Entry+ Loc + Loc: Entry)
anv1 <- anova(m1)
#######################################################
mydf = data.frame(aggregate (y ~ Entry + Loc,FUN=mean))
mydf$Loc <- as.factor(mydf$Loc)
mydf$Entry <- as.factor(mydf$Entry)
m2 <- aov(y~Entry+Loc+Loc:Entry,data = mydf)
anv2 <- anova(m2)
###############################################
Lxg <- tapply(y, list(Entry,Loc), mean)
Lmean <- apply(Lxg,2,mean)
Lsum <- apply(Lxg,2,sum)
Emean <- apply(Lxg,1,mean)
over.mean <- mean(Lxg)
################Stability Analisys
I <- Lmean-over.mean
I2 <- sum(I^2)
YijI <- Lxg%*%I
bi <- YijI/I2
Y2ij <-apply(Lxg^2, 1,sum)
Y2 <- apply(Lxg, 1,sum)^2
Y2 <- Y2/s
VarS<- Y2ij-Y2
bi_I <- bi*YijI
dij2 <-VarS -bi_I
####################@@@@@@@@@@@@@@@@@@@@@
s2 <- anv1$`Mean Sq`[4]
sdi <- (dij2/(s-2))-(s2/r)
#######################Sum Square
SS.varieties <-anv2$`Sum Sq`[1]
SS.Env_varietiesxenv<- sum(Y2ij)-sum(apply(Lxg, 1,sum)^2)/s
SS.enviromen_linear <- anv2$`Sum Sq`[2]
SS.ExL_Lineal<- anv2$`Sum Sq`[2]
SS.varietiesxenviroment_linar <- sum(bi_I)-SS.ExL_Lineal
SS.pool.desviation <- sum(dij2)
ss.sd <- dij2
SS.poolerr <-  anv1 $"Sum Sq"[4] / r
SS <-c(SS.varieties,SS.Env_varietiesxenv,SS.enviromen_linear,SS.varietiesxenviroment_linar
,SS.pool.desviation,ss.sd,SS.poolerr)
########################### degree freedon
df_varieties<- t-1
df_Env_varietiesxenv<- t*(s-1)
df_enviromen_linear <- 1
df_varietiesxenviroment_linar <- t-1
df_pool.desviation <- t*(s-2)
df_sd <- rep(s-2,length(dij2))
df_pooerr <- s*t*(r-1)
df <- c(df_varieties,df_Env_varietiesxenv,df_enviromen_linear,df_varietiesxenviroment_linar
,df_pool.desviation,df_sd,df_pooerr)
#########################Mean Square
ms_varieties<- SS.varieties /df_varieties
ms_Env_varietiesxenv<-SS.Env_varietiesxenv/df_Env_varietiesxenv
ms_enviromen_linear <- SS.enviromen_linear/df_enviromen_linear
ms_varietiesxenviroment_linar <- SS.varietiesxenviroment_linar/df_varietiesxenviroment_linar
ms_pool.desviation <- SS.pool.desviation/df_pool.desviation
ms_sd <-ss.sd/df_sd
ms_pooerr<- SS.poolerr/df_pooerr
ms <- c(ms_varieties,ms_Env_varietiesxenv,ms_enviromen_linear, ms_varietiesxenviroment_linar,
ms_pool.desviation,ms_sd,ms_pooerr )
#################fc
fvarieties <- ms_varieties/ms_varietiesxenviroment_linar
fvarietiesxenviroment_linar <- ms_varietiesxenviroment_linar /ms_pool.desviation
f <-ms_sd/ ms_pooerr
ft <- c(fvarieties,NA,NA,fvarietiesxenviroment_linar,NA,f,NA)
PLINES <-  1- pf(f,df[7], df_pooerr)
pval = c(1- pf(fvarieties, df_varieties, df_pool.desviation ), NA, NA,1- pf(fvarietiesxenviroment_linar, df[4], df_pool.desviation),NA,PLINES, NA)
anovadf <- data.frame(df, `Sum Sq`=SS, `Mean Sq`=ms, `F value`= ft,`Pr(>F)`= pval,check.names=FALSE)
rownames(anovadf) <- c("Genotypes","Env + (Gen x Env)", "Env (linear)", " Gen x Env(linear)", "Pooled deviation",levels(Entry), "Pooled error" )
class(anovadf) <- c("anova","data.frame")
###########stability Anova
stb <- data.frame("Genotype"=Entry_names,"Means"=Emean,"bi"=bi,"Sdi"=sdi)
stb
cat(" Stable genotype have bij = 1 and sdij = 0", "\n\n"  )
n <- c("y")
plot(1, type = 'n', xlim = range(c(stb[,3])) ,ylim = range(c(stb[,3], stb[,4])), xlab = "bi",
ylab ="Sdi",main = paste("Eberhart-Russell`s Model of stability for ", trait, sep = ""))
text(stb[,3], stb[,4], labels = Entry_names, adj = c(0.5, 0.5), col = "blue")
abline(h = 0, v=1,lty = 1)
result <-list(ANOVA=anv1,IGE=anovadf,Stability=stb)
return(result)
}
ige<- E_R(Env,Rep,Entry,y,"y")
ige$Stability
