xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
#####rows
for (i in 1:Entry.num) {  ###genotype
arrows(0,0,c(0, U[i, 1]), c(0, U[i, 2]), col = "green", lty = 1,lwd=2)}
for (i in 1:Loc.num) {  ###enviroment
arrows(0,0,c(0, V[i, 1]), c(0, V[i, 2]), col = "green", lty = 1,lwd=2) }
}
else if(biplot==3){
plot(1, type = 'n', asp = 1, xlim = range(c(U[, 1], V[, 1])), ylim = range(c(U[, 2], V[, 2])),
xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
points(U[, 1], U[, 2], col = "blue", lwd = 2, pch = 15)
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
points(V[, 1], V[, 2], col = "red", lwd = 2, pch = 17)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
############# aggregate lines
for (i in 1:Entry.num) {  #  genotype
lines(c(0, U[i,1]), c(0, U[i, 2]), col = "black", lty = 1,lwd=2)  }
for (i in 1:Loc.num){  #    enviroment
lines(c(0, V[i,1]), c(0, V[i, 2]),col = "black", lty = 1,lwd=2) }
}
###################Statistics
Means<- as.data.frame(Entry.mean)
##########ASV
P.C_GEN <- round(U[,1:2],5)
P <-PC.SS[1]/PC.SS[2]
ASV <- round(sqrt(P*(P.C_GEN[,1])^2+(P.C_GEN[,2])^2),4)
rk_asv<-rank(ASV)
tab_out <-data.frame("Hibridos"=Entry_names,"MEDIA"=Means$Entry.mean,
"ASV"=ASV,"Rank ASV"=rk_asv)
##########################
result <-list(ANOVA=anv1,ANOVA_AMMI=tab_anv,ANOVA_PC=PC_aov,Stat=tab_out)
return(result)
}
model<- with(plrv,AMMI(Locality, Genotype, Rep, Yield, console=TRUE))
m1<- AMM(Block = NULL,plrv$Locality,plrv$Rep,plrv$Genotype,plrv$Yield,model = 1,biplot = 1)
m1$ANOVA
m1<- AMM(Block = NULL,plrv$Locality,plrv$Rep,plrv$Genotype,plrv$Yield,model = 1,biplot =0)
m1$Stat
AMM <- function(Block=NULL,Env,Rep,Entry,y,model=c(1,2),biplot = c(0,1,2,3)){
if (!is.null(Block)){
Block <- as.factor(Block)
}
Loc <- as.factor(Env)
Rep <- as.factor(Rep)
Entry <- as.factor(Entry)
y <- as.numeric(y)
##################################
overall.mean <- mean(y)
Loc.mean <- tapply(y, Loc, mean)
Entry.mean <- tapply(y, Entry, mean)
########################################################
if(model==1){
m1 <- aov(y~Entry+Rep:Loc+Entry:Loc+Loc)
anv1 <- anova(m1)
}
else if( model==2){
m1<- aov(y~Entry+Rep:Loc+Block:Rep:Loc+Entry:Loc+Loc)###
anv1 <- anova(m1)
}
##################Estimate of  IGA values
geno_env <- model.tables(m1, type = "effects", cterms = "Entry:Loc")
igenoxenv <- geno_env$tables$`Entry:Loc`
############################################################
Entry_names<- levels(Entry)
Loc_names <- levels(Loc)
Entry.num <- length(Entry_names)
Loc.num <- length(Loc_names)
nrep <- length(levels(Rep))
############Descomposition of values singulars
DVS <- svd(igenoxenv)
D <- diag(DVS$d)
U <- DVS$u %*%sqrt(D)
V <- DVS$v %*%sqrt(D)
############## PCA##############
PC <- min(Loc.num, Entry.num) - 1
PC.num <- paste0("PC", c(1:PC))
PC.dsv <- DVS$d[1:PC]^2
PC.count <- PC.dsv / sum(PC.dsv) * 100
PC.acum <- cumsum(PC.count)
Ecolnumb <- c(1:PC)
Ecolnames <- paste("PC", Ecolnumb, sep = "")
###############ANOVA PC`S
residual.SS <- deviance(m1)
residual.DF <- m1$df.residual
residual.MS <- residual.SS/residual.DF
####################Sum Square PC`S
int.SS <- (t(as.vector(igenoxenv)) %*% as.vector(igenoxenv))*nrep
PC.SS <- DVS$d[1:PC]^2*nrep
PC.SS <- round(PC.SS,4)
PC.DF <- Entry.num + Loc.num - 1 - 2*Ecolnumb
PC.residual.SS <- round(int.SS - sum(PC.SS),5)
PC.residual.DF <- ((Entry.num - 1)*(Loc.num - 1)) - sum(PC.DF)
PC.SS[PC + 1] <- PC.residual.SS
PC.DF[PC + 1] <- PC.residual.DF
#########################Means square
MS <- PC.SS/PC.DF
MS <- round(MS,4)
F <- MS/residual.MS
F <- round(F,2)
probab <- pf(F, PC.DF, residual.DF, lower.tail = FALSE)
probab <- round(probab,4)
#####################Table anova
percSS <- PC.SS/int.SS
rowlab <- c(Ecolnames, "Residuals")
######################
anv_gl <- c(anv1$Df[1],anv1$Df[2],anv1$Df[4])
anv_ss <- c(anv1$`Sum Sq`[1],anv1$`Sum Sq`[2],anv1$`Sum Sq`[4] )
anv_ms <- c(anv1$`Mean Sq`[1],anv1$`Mean Sq`[2],iga_ms <- anv1$`Mean Sq`[4])
anv_f <- c(anv1$`Pr(>F)`[1],anv1$`Pr(>F)`[2],anv1$`Pr(>F)`[4])
effec <-c("GEN","ENV","ENV*GEN")
anv.count <- anv_ss / sum(anv_ss) * 100
anv.acom <- cumsum(anv.count)
ftab <- c(anv1$`F value`[1],anv1$`F value`[2],anv1$`F value`[4])
tab_anv <- data.frame(Effect=effec,SS=anv_ss,PORCENT=anv.count,ACOMULATED=anv.acom
,DF=anv_gl,MS=anv_ms,F=ftab,Prob=anv_f)
#######################
PC.count <- round(PC.count,5)
PC.acum <- round(PC.acum,5)
Porcent_pc<- c(PC.count,"Residuals")
Acum_pc <- c(PC.acum,"Residuals")
PC_aov<- data.frame(Effect = rowlab, SS = PC.SS,PORCENT=Porcent_pc,ACOMULATED=Acum_pc,
DF = PC.DF, MS = MS, F = F, Pr.F = probab)
###############Plots
if(biplot== 0){
plot(1, type = 'n', xlim = range(c(Loc.mean, Entry.mean)), ylim = range(c(V[,1], U[,1])), xlab = "Yield",
ylab =paste("PC1",round(PC.count[1],2),"%",sep=" "))
text(Entry.mean, U[,1], labels = Entry_names, adj = c(0.5, 0.5), col = "blue")
text(Loc.mean , V[,1], labels = Loc_names, adj = c(0.5, 0.5), col = "red")
abline(h = 0, v = overall.mean, lty = 1)
for (i in 1:Loc.num){  #    enviroment
lines(c(overall.mean,Loc.mean [i]), c(0, V[i, 1]),col = "black", lty = 1,lwd=2) }
}
else if(biplot ==1){
plot(1, type = 'n', xlim = range(c(Loc.mean , Entry.mean)), ylim = range(c(V[,1], U[,1])), xlab = "Yield",
ylab =paste("PC1",round(PC.count[1],2),"%",sep=" "))
text(Entry.mean, U[,1], labels = Entry_names, adj = c(0.5, 0.5), col = "blue",pos = 3)
text(Loc.mean, V[,1], labels = Loc_names, adj = c(0.5, 0.5), col = "red",pos = 3)
points(Loc.mean, V[,1], col = "red", lwd = 2, pch = 17)
points(Entry.mean, U[,1], col = "blue", lwd = 2, pch = 15)
abline(h = 0, v = overall.mean, lty = 1)
for (i in 1:Loc.num){  #    enviroment
lines(c(overall.mean,Loc.mean[i]), c(0, V[i, 1]),col = "black", lty = 1,lwd=2) }
}
else if(biplot == 2) {
plot(1, type = 'n', asp = 1, xlim = range(c(U[, 1], V[, 1])), ylim = range(c(U[, 2], V[, 2])),
xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
#####rows
for (i in 1:Entry.num) {  ###genotype
arrows(0,0,c(0, U[i, 1]), c(0, U[i, 2]), col = "green", lty = 1,lwd=2)}
for (i in 1:Loc.num) {  ###enviroment
arrows(0,0,c(0, V[i, 1]), c(0, V[i, 2]), col = "green", lty = 1,lwd=2) }
}
else if(biplot==3){
plot(1, type = 'n', asp = 1, xlim = range(c(U[, 1], V[, 1])), ylim = range(c(U[, 2], V[, 2])),
xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
points(U[, 1], U[, 2], col = "blue", lwd = 2, pch = 15)
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
points(V[, 1], V[, 2], col = "red", lwd = 2, pch = 17)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
############# aggregate lines
for (i in 1:Entry.num) {  #  genotype
lines(c(0, U[i,1]), c(0, U[i, 2]), col = "black", lty = 1,lwd=2)  }
for (i in 1:Loc.num){  #    enviroment
lines(c(0, V[i,1]), c(0, V[i, 2]),col = "black", lty = 1,lwd=2) }
}
###################Statistics
Means<- as.data.frame(Entry.mean)
Loc_means <- as.data.frame(Loc.mean)
##########ASV
P.C_GEN <- round(U[,1:2],5)
P <-PC.SS[1]/PC.SS[2]
ASV <- round(sqrt(P*(P.C_GEN[,1])^2+(P.C_GEN[,2])^2),4)
rk_asv<-rank(ASV)
tab_out <-data.frame("Entry"=Entry_names,"MEDIA"=Means$Entry.mean,
"ASV"=ASV,"Rank ASV"=rk_asv)
##########################
result <-list(ANOVA=anv1,ANOVA_AMMI=tab_anv,ANOVA_PC=PC_aov,Stat=tab_out,
Means_Loc=Loc_means)
return(result)
}
model<- with(plrv,AMMI(Locality, Genotype, Rep, Yield, console=TRUE))
m1<- AMM(Block = NULL,plrv$Locality,plrv$Rep,plrv$Genotype,plrv$Yield,model = 1,biplot =0)
m1$Stat
m1$Means_Loc
m1$Stat
setwd("~/Documents/IGE/AMMI")
fm <- read.csv("COMBART2016-37LOC data.csv",head=T)
m1<- AMM(Block = fm$BLOCK,fm$env,fm$rep,fm$geno,fm$y,model = 2,biplot =0)
m1$Stat
m1$Means_Loc
AMM <- function(Block=NULL,Env,Rep,Entry,y,model=c(1,2),biplot = c(0,1,2,3)){
if (!is.null(Block)){
Block <- as.factor(Block)
}
Loc <- as.factor(Env)
Rep <- as.factor(Rep)
Entry <- as.factor(Entry)
y <- as.numeric(y)
#######################################################
######### Statistics#################################
overall.mean <- mean(y)
Loc.mean <- tapply(y, Loc, mean)
Entry.mean <- tapply(y, Entry, mean)
########################################################
if(model==1){
m1 <- aov(y~Entry+Rep:Loc+Entry:Loc+Loc)##################RCBD Design
anv1 <- anova(m1)
}
else if( model==2){
m1<- aov(y~Entry+Rep:Loc+Block:Rep:Loc+Entry:Loc+Loc)######Lattice
anv1 <- anova(m1)
}
##################Estimate of  IGA values
geno_env <- model.tables(m1, type = "effects", cterms = "Entry:Loc")
igenoxenv <- geno_env$tables$`Entry:Loc`
############################################################
Entry_names<- levels(Entry)
Loc_names <- levels(Loc)
Entry.num <- length(Entry_names)
Loc.num <- length(Loc_names)
nrep <- length(levels(Rep))
############Descomposition of values singulars
DVS <- svd(igenoxenv)
D <- diag(DVS$d)
U <- DVS$u %*%sqrt(D)
V <- DVS$v %*%sqrt(D)
############## PCA##############
PC <- min(Loc.num, Entry.num) - 1
PC.num <- paste0("PC", c(1:PC))
PC.dsv <- DVS$d[1:PC]^2
PC.count <- PC.dsv / sum(PC.dsv) * 100
PC.acum <- cumsum(PC.count)
Ecolnumb <- c(1:PC)
Ecolnames <- paste("PC", Ecolnumb, sep = "")
###############ANOVA PC`S##########
residual.SS <- deviance(m1)
residual.DF <- m1$df.residual
residual.MS <- residual.SS/residual.DF
####################Sum Square PC`S##########
int.SS <- (t(as.vector(igenoxenv)) %*% as.vector(igenoxenv))*nrep
PC.SS <- DVS$d[1:PC]^2*nrep
PC.SS <- round(PC.SS,4)
PC.DF <- Entry.num + Loc.num - 1 - 2*Ecolnumb
PC.residual.SS <- round(int.SS - sum(PC.SS),5)
PC.residual.DF <- ((Entry.num - 1)*(Loc.num - 1)) - sum(PC.DF)
PC.SS[PC + 1] <- PC.residual.SS
PC.DF[PC + 1] <- PC.residual.DF
#########################Means square####
MS <- PC.SS/PC.DF
MS <- round(MS,4)
F <- MS/residual.MS
F <- round(F,2)
probab <- pf(F, PC.DF, residual.DF, lower.tail = FALSE)
probab <- round(probab,4)
#####################Table anova################
percSS <- PC.SS/int.SS
rowlab <- c(Ecolnames, "Residuals")
######################Result ANova###################
anv_gl <- c(anv1$Df[1],anv1$Df[2],anv1$Df[4])
anv_ss <- c(anv1$`Sum Sq`[1],anv1$`Sum Sq`[2],anv1$`Sum Sq`[4] )
anv_ms <- c(anv1$`Mean Sq`[1],anv1$`Mean Sq`[2],iga_ms <- anv1$`Mean Sq`[4])
anv_f <- c(anv1$`Pr(>F)`[1],anv1$`Pr(>F)`[2],anv1$`Pr(>F)`[4])
effec <-c("GEN","ENV","ENV*GEN")
anv.count <- anv_ss / sum(anv_ss) * 100
anv.acom <- cumsum(anv.count)
ftab <- c(anv1$`F value`[1],anv1$`F value`[2],anv1$`F value`[4])
tab_anv <- data.frame(Effect=effec,SS=anv_ss,PORCENT=anv.count,ACOMULATED=anv.acom
,DF=anv_gl,MS=anv_ms,F=ftab,Prob=anv_f)
#######################Result PC`S####################
PC.count <- round(PC.count,5)
PC.acum <- round(PC.acum,5)
Porcent_pc<- c(PC.count,"Residuals")
Acum_pc <- c(PC.acum,"Residuals")
PC_aov<- data.frame(Effect = rowlab, SS = PC.SS,PORCENT=Porcent_pc,ACOMULATED=Acum_pc,
DF = PC.DF, MS = MS, F = F, Pr.F = probab)
###############Plot AMMI model AMMI1
if(biplot== 0){
plot(1, type = 'n', xlim = range(c(Loc.mean, Entry.mean)), ylim = range(c(V[,1], U[,1])), xlab = "Yield",
ylab =paste("PC1",round(PC.count[1],2),"%",sep=" "))
text(Entry.mean, U[,1], labels = Entry_names, adj = c(0.5, 0.5), col = "blue")
text(Loc.mean , V[,1], labels = Loc_names, adj = c(0.5, 0.5), col = "red")
abline(h = 0, v = overall.mean, lty = 1)
for (i in 1:Loc.num){  #    enviroment
lines(c(overall.mean,Loc.mean [i]), c(0, V[i, 1]),col = "black", lty = 1,lwd=2) }
}
else if(biplot ==1){
plot(1, type = 'n', xlim = range(c(Loc.mean , Entry.mean)), ylim = range(c(V[,1], U[,1])), xlab = "Yield",
ylab =paste("PC1",round(PC.count[1],2),"%",sep=" "))
text(Entry.mean, U[,1], labels = Entry_names, adj = c(0.5, 0.5), col = "blue",pos = 3)
text(Loc.mean, V[,1], labels = Loc_names, adj = c(0.5, 0.5), col = "red",pos = 3)
points(Loc.mean, V[,1], col = "red", lwd = 2, pch = 17)
points(Entry.mean, U[,1], col = "blue", lwd = 2, pch = 15)
abline(h = 0, v = overall.mean, lty = 1)
for (i in 1:Loc.num){  #    enviroment
lines(c(overall.mean,Loc.mean[i]), c(0, V[i, 1]),col = "black", lty = 1,lwd=2) }
}
####################### Plot Model AMMI2
else if(biplot == 2) {
plot(1, type = 'n', asp = 1, xlim = range(c(U[, 1], V[, 1])), ylim = range(c(U[, 2], V[, 2])),
xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
#####rows
for (i in 1:Entry.num) {  ###genotype
arrows(0,0,c(0, U[i, 1]), c(0, U[i, 2]), col = "green", lty = 1,lwd=2)}
for (i in 1:Loc.num) {  ###enviroment
arrows(0,0,c(0, V[i, 1]), c(0, V[i, 2]), col = "green", lty = 1,lwd=2) }
}
else if(biplot==3){
plot(1, type = 'n', asp = 1, xlim = range(c(U[, 1], V[, 1])), ylim = range(c(U[, 2], V[, 2])),
xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
points(U[, 1], U[, 2], col = "blue", lwd = 2, pch = 15)
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
points(V[, 1], V[, 2], col = "red", lwd = 2, pch = 17)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
############# aggregate lines
for (i in 1:Entry.num) {  #  genotype
lines(c(0, U[i,1]), c(0, U[i, 2]), col = "black", lty = 1,lwd=2)  }
for (i in 1:Loc.num){  #    enviroment
lines(c(0, V[i,1]), c(0, V[i, 2]),col = "black", lty = 1,lwd=2) }
}
###################Statistics
Means<- as.data.frame(Entry.mean)
Loc_means <- as.data.frame(Loc.mean)
##########ASV
P.C_GEN <- round(U[,1:2],5)
P <-PC.SS[1]/PC.SS[2]
ASV <- round(sqrt(P*(P.C_GEN[,1])^2+(P.C_GEN[,2])^2),4)
rk_asv<-rank(ASV)
tab_out <-data.frame("Entry"=Entry_names,"MEDIA"=Means$Entry.mean,
"ASV"=ASV,"Rank ASV"=rk_asv)
##########################
result <-list(ANOVA=anv1,ANOVA_AMMI=tab_anv,ANOVA_PC=PC_aov,Means_Entry=tab_out,
Means_Loc=Loc_means)
return(result)
}
m1<- AMM(Block = fm$BLOCK,fm$env,fm$rep,fm$geno,fm$y,model = 2,biplot =0)
m1$Means_Loc
m1$Means_Entry
setwd("~/Documents/GitHub/Additive-Main-Effect-and-Multiplicative-Interaction-AMMI")
dat <- read.csv("COMBART2016-37LOC data.csv",head=T)
fm <- read.csv("COMBART2016-37LOC data.csv",head=T)
fm
write.csv(fm,"Dat.csv")
fm <- read.csv("Cdat.csv",head=T)
fm <- read.csv("Cdat.csv",head=T)
fm <- read.csv("Dat.csv",head=T)
head(fm)
AMMI <- function(Block=NULL,Env,Rep,Entry,y,model=c(1,2),biplot = c(0,1,2,3)){
if (!is.null(Block)){
Block <- as.factor(Block)
}
Loc <- as.factor(Env)
Rep <- as.factor(Rep)
Entry <- as.factor(Entry)
y <- as.numeric(y)
#######################################################
######### Statistics#################################
overall.mean <- mean(y)
Loc.mean <- tapply(y, Loc, mean)
Entry.mean <- tapply(y, Entry, mean)
########################################################
if(model==1){
m1 <- aov(y~Entry+Rep:Loc+Entry:Loc+Loc)##################RCBD Design
anv1 <- anova(m1)
}
else if( model==2){
m1<- aov(y~Entry+Rep:Loc+Block:Rep:Loc+Entry:Loc+Loc)######Lattice
anv1 <- anova(m1)
}
##################Estimate of  IGA values
geno_env <- model.tables(m1, type = "effects", cterms = "Entry:Loc")
igenoxenv <- geno_env$tables$`Entry:Loc`
############################################################
Entry_names<- levels(Entry)
Loc_names <- levels(Loc)
Entry.num <- length(Entry_names)
Loc.num <- length(Loc_names)
nrep <- length(levels(Rep))
############Descomposition of values singulars
DVS <- svd(igenoxenv)
D <- diag(DVS$d)
U <- DVS$u %*%sqrt(D)
V <- DVS$v %*%sqrt(D)
############## PCA##############
PC <- min(Loc.num, Entry.num) - 1
PC.num <- paste0("PC", c(1:PC))
PC.dsv <- DVS$d[1:PC]^2
PC.count <- PC.dsv / sum(PC.dsv) * 100
PC.acum <- cumsum(PC.count)
Ecolnumb <- c(1:PC)
Ecolnames <- paste("PC", Ecolnumb, sep = "")
###############ANOVA PC`S##########
residual.SS <- deviance(m1)
residual.DF <- m1$df.residual
residual.MS <- residual.SS/residual.DF
####################Sum Square PC`S##########
int.SS <- (t(as.vector(igenoxenv)) %*% as.vector(igenoxenv))*nrep
PC.SS <- DVS$d[1:PC]^2*nrep
PC.SS <- round(PC.SS,4)
PC.DF <- Entry.num + Loc.num - 1 - 2*Ecolnumb
PC.residual.SS <- round(int.SS - sum(PC.SS),5)
PC.residual.DF <- ((Entry.num - 1)*(Loc.num - 1)) - sum(PC.DF)
PC.SS[PC + 1] <- PC.residual.SS
PC.DF[PC + 1] <- PC.residual.DF
#########################Means square####
MS <- PC.SS/PC.DF
MS <- round(MS,4)
F <- MS/residual.MS
F <- round(F,2)
probab <- pf(F, PC.DF, residual.DF, lower.tail = FALSE)
probab <- round(probab,4)
#####################Table anova################
percSS <- PC.SS/int.SS
rowlab <- c(Ecolnames, "Residuals")
######################Result ANova###################
anv_gl <- c(anv1$Df[1],anv1$Df[2],anv1$Df[4])
anv_ss <- c(anv1$`Sum Sq`[1],anv1$`Sum Sq`[2],anv1$`Sum Sq`[4] )
anv_ms <- c(anv1$`Mean Sq`[1],anv1$`Mean Sq`[2],iga_ms <- anv1$`Mean Sq`[4])
anv_f <- c(anv1$`Pr(>F)`[1],anv1$`Pr(>F)`[2],anv1$`Pr(>F)`[4])
effec <-c("GEN","ENV","ENV*GEN")
anv.count <- anv_ss / sum(anv_ss) * 100
anv.acom <- cumsum(anv.count)
ftab <- c(anv1$`F value`[1],anv1$`F value`[2],anv1$`F value`[4])
tab_anv <- data.frame(Effect=effec,SS=anv_ss,PORCENT=anv.count,ACOMULATED=anv.acom
,DF=anv_gl,MS=anv_ms,F=ftab,Prob=anv_f)
#######################Result PC`S####################
PC.count <- round(PC.count,5)
PC.acum <- round(PC.acum,5)
Porcent_pc<- c(PC.count,"Residuals")
Acum_pc <- c(PC.acum,"Residuals")
PC_aov<- data.frame(Effect = rowlab, SS = PC.SS,PORCENT=Porcent_pc,ACOMULATED=Acum_pc,
DF = PC.DF, MS = MS, F = F, Pr.F = probab)
###############Plot AMMI model AMMI1
if(biplot== 0){
plot(1, type = 'n', xlim = range(c(Loc.mean, Entry.mean)), ylim = range(c(V[,1], U[,1])), xlab = "Yield",
ylab =paste("PC1",round(PC.count[1],2),"%",sep=" "))
text(Entry.mean, U[,1], labels = Entry_names, adj = c(0.5, 0.5), col = "blue")
text(Loc.mean , V[,1], labels = Loc_names, adj = c(0.5, 0.5), col = "red")
abline(h = 0, v = overall.mean, lty = 1)
for (i in 1:Loc.num){  #    enviroment
lines(c(overall.mean,Loc.mean [i]), c(0, V[i, 1]),col = "black", lty = 1,lwd=2) }
}
else if(biplot ==1){
plot(1, type = 'n', xlim = range(c(Loc.mean , Entry.mean)), ylim = range(c(V[,1], U[,1])), xlab = "Yield",
ylab =paste("PC1",round(PC.count[1],2),"%",sep=" "))
text(Entry.mean, U[,1], labels = Entry_names, adj = c(0.5, 0.5), col = "blue",pos = 3)
text(Loc.mean, V[,1], labels = Loc_names, adj = c(0.5, 0.5), col = "red",pos = 3)
points(Loc.mean, V[,1], col = "red", lwd = 2, pch = 17)
points(Entry.mean, U[,1], col = "blue", lwd = 2, pch = 15)
abline(h = 0, v = overall.mean, lty = 1)
for (i in 1:Loc.num){  #    enviroment
lines(c(overall.mean,Loc.mean[i]), c(0, V[i, 1]),col = "black", lty = 1,lwd=2) }
}
####################### Plot Model AMMI2
else if(biplot == 2) {
plot(1, type = 'n', asp = 1, xlim = range(c(U[, 1], V[, 1])), ylim = range(c(U[, 2], V[, 2])),
xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
#####rows
for (i in 1:Entry.num) {  ###genotype
arrows(0,0,c(0, U[i, 1]), c(0, U[i, 2]), col = "green", lty = 1,lwd=2)}
for (i in 1:Loc.num) {  ###enviroment
arrows(0,0,c(0, V[i, 1]), c(0, V[i, 2]), col = "green", lty = 1,lwd=2) }
}
else if(biplot==3){
plot(1, type = 'n', asp = 1, xlim = range(c(U[, 1], V[, 1])), ylim = range(c(U[, 2], V[, 2])),
xlab = paste("PC1",round(PC.count[1],2),"%",sep=" "), ylab = paste("PC2",round(PC.count[2],2),"%",sep =" "))
points(U[, 1], U[, 2], col = "blue", lwd = 2, pch = 15)
text(U[, 1], U[, 2], labels = Entry_names, adj = c(0.5, 0.5), col = "blue", pos = 3)
points(V[, 1], V[, 2], col = "red", lwd = 2, pch = 17)
text(V[, 1], V[, 2], labels = Loc_names, adj = c(0.5, 0.5), col = "red", pos = 3)
abline(h = 0, v = 0, col = "black", lty = 1)
############# aggregate lines
for (i in 1:Entry.num) {  #  genotype
lines(c(0, U[i,1]), c(0, U[i, 2]), col = "black", lty = 1,lwd=2)  }
for (i in 1:Loc.num){  #    enviroment
lines(c(0, V[i,1]), c(0, V[i, 2]),col = "black", lty = 1,lwd=2) }
}
###################Statistics
Means<- as.data.frame(Entry.mean)
Loc_means <- as.data.frame(Loc.mean)
##########ASV
P.C_GEN <- round(U[,1:2],5)
P <-PC.SS[1]/PC.SS[2]
ASV <- round(sqrt(P*(P.C_GEN[,1])^2+(P.C_GEN[,2])^2),4)
rk_asv<-rank(ASV)
tab_out <-data.frame("Entry"=Entry_names,"MEDIA"=Means$Entry.mean,
"ASV"=ASV,"Rank ASV"=rk_asv)
##########################
result <-list(ANOVA=anv1,ANOVA_AMMI=tab_anv,ANOVA_PC=PC_aov,Means_Entry=tab_out,
Means_Loc=Loc_means)
return(result)
}
Ex1<- AMMI(NULL,plrv$Locality,plrv$Rep, plrv$Genotype,plrv$Yield,model = 1,biplot = 2)
Ex1$Means_Entry
Ex1$ANOVA_PC
Ex2<- AMM(Block = fm$BLOCK,fm$env,fm$rep,fm$geno,fm$y,model = 2,biplot =0)
setwd("~/Documents/GitHub/Stability-Analysis")
write.csv(fm,"dat.csv")
